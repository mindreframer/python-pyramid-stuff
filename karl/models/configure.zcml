<configure xmlns="http://pylonshq.com/pyramid"
    xmlns:lemonade="http://namespaces.repoze.org/lemonade">

  <include package="repoze.lemonade.includes" file="meta.zcml" />

  <adapter for="karl.models.interfaces.IPeopleReport"
           provides="karl.adapters.interfaces.IMailinHandler"
           factory="karl.models.adapters.PeopleReportMailinHandler"
           />

  <subscriber
      for="karl.models.interfaces.IPeopleReportMailingList
           repoze.folder.interfaces.IObjectAddedEvent"
      handler=".subscribers.add_mailinglist"/>

  <subscriber
      for="karl.models.interfaces.IPeopleReportMailingList
           repoze.folder.interfaces.IObjectWillBeRemovedEvent"
      handler=".subscribers.remove_mailinglist"/>

  <subscriber
      for="repoze.lemonade.interfaces.IContent
           repoze.folder.interfaces.IObjectWillBeRemovedEvent"
      handler=".subscribers.handle_content_removed"/>

  <subscriber
      for="repoze.lemonade.interfaces.IContent
           repoze.folder.interfaces.IObjectAddedEvent"
      handler=".subscribers.index_content"/>

  <subscriber
      for="repoze.lemonade.interfaces.IContent
           repoze.folder.interfaces.IObjectAddedEvent"
      handler=".contentfeeds.user_added_content"/>

  <subscriber
      for="repoze.lemonade.interfaces.IContent
           repoze.folder.interfaces.IObjectWillBeAddedEvent"
      handler=".subscribers.set_created"/>

  <subscriber
      for="repoze.lemonade.interfaces.IContent
           .interfaces.IObjectModifiedEvent"
      handler=".subscribers.set_modified"/>

  <subscriber
      for="repoze.lemonade.interfaces.IContent
           .interfaces.IObjectModifiedEvent"
      handler=".contentfeeds.user_modified_content"/>

  <subscriber
      for="repoze.lemonade.interfaces.IContent
           .interfaces.IObjectModifiedEvent"
      handler=".subscribers.reindex_content"/>

  <subscriber
      for=".interfaces.ICommunity
           repoze.folder.interfaces.IObjectWillBeRemovedEvent"
      handler=".subscribers.delete_community"/>

  <subscriber
      for=".interfaces.ICommunity
           repoze.folder.interfaces.IObjectAddedEvent"
      handler=".subscribers.alpha_added"/>

  <subscriber
      for="repoze.lemonade.interfaces.IContent
           repoze.folder.interfaces.IObjectAddedEvent"
      handler=".subscribers.add_to_repo"/>

  <subscriber
      for="repoze.lemonade.interfaces.IContent
           repoze.folder.interfaces.IObjectRemovedEvent"
      handler=".subscribers.delete_in_repo"/>

  <subscriber
      for=".interfaces.ICommunity
           .interfaces.IObjectModifiedEvent"
      handler=".subscribers.alpha_added"/>

  <subscriber
      for=".interfaces.ICommunity
           .interfaces.IObjectWillBeModifiedEvent"
      handler=".subscribers.alpha_removed"/>

  <subscriber
      for=".interfaces.IProfile
           repoze.folder.interfaces.IObjectAddedEvent"
      handler=".subscribers.alpha_added"/>

  <subscriber
      for=".interfaces.IProfile
           repoze.folder.interfaces.IObjectWillBeRemovedEvent"
      handler=".subscribers.alpha_removed"/>

  <subscriber
      for=".interfaces.IProfile
           .interfaces.IObjectModifiedEvent"
      handler=".subscribers.alpha_added"/>

  <subscriber
      for=".interfaces.IProfile
           .interfaces.IObjectWillBeModifiedEvent"
      handler=".subscribers.alpha_removed"/>

  <subscriber
      for="karl.models.interfaces.IProfile
           repoze.folder.interfaces.IObjectWillBeRemovedEvent"
      handler=".subscribers.unindex_profile"/>

  <subscriber
      for="karl.models.interfaces.IProfile
           repoze.folder.interfaces.IObjectAddedEvent"
      handler=".subscribers.index_profile"/>

  <subscriber
      for="karl.models.interfaces.IProfile
           karl.models.interfaces.IObjectModifiedEvent"
      handler=".subscribers.reindex_profile"/>

  <subscriber
      for="karl.models.interfaces.IUserAddedGroup"
      handler=".subscribers.reindex_profile_after_group_change"/>

  <subscriber
      for="karl.models.interfaces.IUserAddedGroup"
      handler=".contentfeeds.user_joined_community"/>

  <subscriber
      for="karl.models.interfaces.IUserRemovedGroup"
      handler=".subscribers.reindex_profile_after_group_change"/>

  <subscriber
      for="karl.models.interfaces.IUserRemovedGroup"
      handler=".contentfeeds.user_left_community"/>

  <subscriber
      for="karl.tagging.interfaces.ITagAddedEvent"
      handler=".contentfeeds.user_tagged_content"/>

  <subscriber
      for="karl.models.interfaces.IPeopleDirectorySchemaChanged"
      handler=".subscribers.update_peopledirectory_indexes"/>

  <subscriber
      for=".interfaces.ICatalogQueryEvent"
      handler=".subscribers.log_query"/>

  <adapter
      for=".interfaces.IProfile"
      provides=".interfaces.ILetterManager"
      factory=".adapters.ProfileLetterManager"
     />

  <adapter
      for=".interfaces.IProfiles"
      provides=".interfaces.ILetterManager"
      factory=".adapters.ProfileLetterManager"
     />

  <adapter factory=".profile.profile_textindexdata" />

  <subscriber
      for=".interfaces.IProfile
           repoze.folder.interfaces.IObjectAddedEvent"
      handler=".subscribers.profile_added"/>

  <subscriber
      for=".interfaces.IProfile
           repoze.folder.interfaces.IObjectWillBeRemovedEvent"
      handler=".subscribers.profile_removed"/>

  <subscriber
      for=".interfaces.IProfile
           .interfaces.IObjectModifiedEvent"
      handler=".subscribers.profile_added"/>

  <adapter
      for=".interfaces.ICommunity"
      provides=".interfaces.ILetterManager"
      factory=".adapters.CommunityLetterManager"
     />

  <adapter
      for=".interfaces.ICommunities"
      provides=".interfaces.ILetterManager"
      factory=".adapters.CommunityLetterManager"
     />

  <lemonade:content
      factory=".community.Community"
      type=".interfaces.ICommunity"
      />

  <lemonade:content
      factory=".profile.Profile"
      type=".interfaces.IProfile"
      />

  <adapter
    for=".interfaces.ICommunity
          pyramid.interfaces.IRequest"
    provides=".interfaces.ICommunityInfo"
    factory=".adapters.CommunityInfo"
  />

  <!-- XXX Multi-adapter with IRequest not really necessary.
           This should be deprecated, with registration immediately
           following being the preferred way to get a CatalogSearch. -->
  <adapter
    for="zope.interface.Interface
         pyramid.interfaces.IRequest"
    provides=".interfaces.ICatalogSearch"
    factory=".adapters.CatalogSearch"
  />

  <adapter
    for="zope.interface.Interface"
    provides=".interfaces.ICatalogSearch"
    factory=".adapters.CatalogSearch"
    />

  <!-- XXX This should also be deprecated -->
  <adapter
    for=".interfaces.IPeopleReport
         pyramid.interfaces.IRequest"
    provides="karl.models.interfaces.ICatalogSearch"
    factory=".adapters.PeopleDirectoryCatalogSearch"
  />

  <adapter
    for=".adapters.PGTextIndex"
    provides=".interfaces.IContextualSummarizer"
    factory=".adapters.PGTextIndexContextualSummarizer"
    />

  <adapter
    for=".interfaces.IPeopleReport"
    provides="karl.models.interfaces.ICatalogSearch"
    factory=".adapters.PeopleDirectoryCatalogSearch"
  />

  <adapter
      for=".interfaces.IPeopleReport"
      provides=".interfaces.ILetterManager"
      factory=".adapters.PeopleReportLetterManager"
     />

  <adapter
    for="zope.interface.Interface
         pyramid.interfaces.IRequest"
    provides=".interfaces.ITagQuery"
    factory=".adapters.TagQuery"
  />

  <adapter
    for="repoze.lemonade.interfaces.IContent
          pyramid.interfaces.IRequest"
    provides=".interfaces.IGridEntryInfo"
    factory=".adapters.GridEntryInfo"
  />

  <utility
    provides=".interfaces.ICatalogSearchCache"
    component=".catalog.cache"
  />

  <lemonade:content
      factory=".members.Invitation"
      type="karl.models.interfaces.IInvitation"
      />

  <lemonade:content
      factory=".site.Site"
      type=".interfaces.ISite"
      />

  <lemonade:content
      factory=".community.CommunitiesFolder"
      type=".interfaces.ICommunities"
      />

  <lemonade:content
      factory=".profile.ProfilesFolder"
      type=".interfaces.IProfiles"
      />

  <lemonade:content
      factory=".peopledirectory.PeopleDirectory"
      type=".interfaces.IPeopleDirectory"
      />

  <lemonade:content
      factory=".feedstorage.FeedsContainer"
      type=".interfaces.IFeedsContainer"
      />

  <lemonade:content
      factory=".feedstorage.Feed"
      type=".interfaces.IFeed"
      />

</configure>
